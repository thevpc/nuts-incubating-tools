##) nderby:
manage local derby database server configurations

###) SYNOPSIS (derby):
```sh ndb derby <command-options>```
manage local derby database server configurations

```sh ndb derby [ --db <DB_HOME> ] [ --version <DB_VERSION> ] [ start | stop | sysinfo ]```

```sh ndb derby start [-h <host>] [-p <portnumber>] [----derby-version] ```
            : start new derby instance. This starts the network server on the port/host specified or on localhost,
              port 1527 if no host/port is specified and no properties are set to override the defaults.
              By default Network Server will only listen for connections from the machine on which it is running.
              Use -h 0.0.0.0 to listen on all interfaces or -h <hostname> to listen on a specific interface on a
              multiple IP machine.
        ```sh -v | --derby-version <derby-version>```
                 : derby home path
        ```sh -d | --db <db-name-or-path> ```
                 : derby home path
        ```sh --nb ```
                 : set derby home path to ~/.netbeans-derby
```sh ndb derby shutdown [-h <host>] [-p <portnumber>] ```
            : stop a derby instance. This shutdowns the network server on the host and port specified or on the local
              host and port 1527(default) if no host or port is specified.
              Also accepts command {{stop}}
```sh ndb derby ping [-h <host>] [-p <portnumber>] ```
            : send ping command to derby server. This will test whether the Network Server is up.
```sh ndb derby sysinfo [-h <host>] [-p <portnumber>] ```
            : send sysinfo command to derby server. This prints classpath and version information about the Network
              Server, the JVM and the Cloudscape server.
              Also accepts commands {{sys}} and {{sys-info}}
```sh ndb derby runtimeinfo [-h <host] [-p <portnumber] ```
            : send runtimeinfo command to derby server. This prints extensive debbugging information about sessions, threads,
              prepared statements, and memory usage for the running Network Server.
              Also accepts commands {{rt}}, {{runtime}} and {{runtime-info}}
```sh ndb derby logconnections {on | off} [-h <host>] [-p <portnumber>] ```
            : send logconnections command to derby server. This turns logging of connections and disconnections on and off.
              Connections and disconnections are logged to derby.log. Default is off.
              Also accepts command {{log-connections}}
```sh ndb derby maxthreads  <max> [-h <host>][-p <portnumber>] ```
            : send maxthreads command to derby server. This sets the maximum number of threads that can be used for
              connections. Default 0 (unlimitted).
              Also accepts commands {{max-threads}}
```sh ndb derby timeslice  <milliseconds> [-h <host>][-p <portnumber>] ```
            : send timeslice command to derby server. This sets the time each session can have using a connection thread
              before yielding to a waiting session. Default is 0 (no yeild).
              Also accepts commands {{time-slice}}
```sh ndb derby trace  {on | off} [-s <session id>] [-h <host>] [-p <portnumber>] ```
            : send trace command to derby server. This turns drda tracing on or off for the specified session or if no
              session is specified for all sessions. Default is off
```sh ndb derby tracedirectory <tracedirectory> [-h <host>] [-p <portnumber>] ```
            : send trace command to derby server. This changes where new trace files will be placed. For sessions with
              tracing already turned on, trace files remain in the previous location. Default is clousdcape.system.home
              Also accepts commands {{trace-directory}}
```sh ndb derby status [-h <host>] [-p <port-number>] ```
            : status of derby
```sh ndb derby ps [-h <host>] [-p <port-number>] <-options>  ```
            : list derby processes on the current machine
        ```sh --long ```
                 : display in long format
        ```sh --short ```
                 : display in short format (pid only)
```sh ndb derby versions ```
            : list all available (and applicable to the current jdk) derby versions


##) SYNOPSIS:

manage local mysql database access configurations to help backup/restore data simply

##MYSQL LOCAL:##
```sh ndb mysql [--local] list```
    list all databases

```sh ndb mysql [--local] list --name <config-name>```
    list all databases for the given config-name


```sh ndb mysql [--local] add --name <db@config-name> <command-options>```

    add database config

    config options are :
        --startup-wait-time   <VALUE>  : startup  wait time
        --shutdown-wait-time  <VALUE>  : shutdown wait time
        --archive-folder      <VALUE>  : archive folder
        --running-folder      <VALUE>  : running folder
        --log-file            <VALUE>  : log file path
        --mysql-command       <VALUE>  : mysql command path
        --mysqldump-command   <VALUE>  : mysqldump command path

    command options are :
        --db            <VALUE>  : db name
        --user          <VALUE>  : db user
        --password      <VALUE>  : db password
        --ask-password           : if present password is read from standard input

```sh ndb mysql [--local] set --name <db@config-name> <command-options>```

    update database config

    config options are :
        --startup-wait-time   <VALUE>  : startup  wait time
        --shutdown-wait-time  <VALUE>  : shutdown wait time
        --archive-folder      <VALUE>  : archive folder
        --running-folder      <VALUE>  : running folder
        --log-file            <VALUE>  : log file path
        --mysql-command       <VALUE>  : mysql command path
        --mysqldump-command   <VALUE>  : mysqldump command path

    command options are :
        --db            <VALUE>  : database name
        --user          <VALUE>  : app user
        --password      <VALUE>  : app password
        --ask-password           : if true password is read from standard input


```sh ndb mysql [--local] remove [--name] <db@config-name>```

    remove database config

```sh ndb mysql [--local] backup [ [--name] <db@config-name>] [ --path <path>]```

    backup db data file <path>

```sh ndb mysql [--local] restore [ [--name] <db@config-name>] [ --path <path>]```

    restore db data file from <path>

##MYSQL REMOTE:##

```sh ndb mysql --remote list```
    list all databases

```sh ndb mysql --remote list --name <config-name>```
    list all databases for the given config-name


```sh ndb mysql --remote add --name <db@config-name> <command-options>```

    add database config

    command options are :
        --local-name   <VALUE>  : local config name
        --remote-name  <VALUE>  : remote config name
        --server       <VALUE>  : server ssh address

```sh ndb mysql --remote set --name <db@config-name> <command-options>```

    update database config

    command options are :
        --local-name   <VALUE>  : local config name
        --remote-name  <VALUE>  : remote config name
        --server       <VALUE>  : server ssh address

```sh ndb mysql --remote remove --name <db@config-name>```

    remove database config

```sh ndb mysql --remote pull [--name <db@config-name>]```

    restore local config database with remote database data

```sh ndb mysql --remote push [--name <db@config-name>]```

    restore remote config database with local database data


##) COMMON OPTIONS:

```sh -p | --port <port> ```
                 : derby host port
```sh --ssl <address> ```
                 : enable ssl mode
```sh -h | --host <address> ```
                 : derby host address

default DB_VERSION : LATEST
See NetworkServerControl command for full commands

##) EXAMPLES:

```sh ndb derby ps --long```
   show all derby processes

```sh ndb derby ping```
   trigger a ping command and display a message telling it is ok

```sh ndb derby status```
   trigger a ping command and display as short message of derby status

```sh ndb derby versions```
   show available versions

```sh ndb mysql add --name enisoinfo --user myuser --password mypassword```
    create configuration. Password will be encrypted and stored.

```sh ndb mysql backup --name enisoinfo```
    backup configuration named enisoinfo
